@*==============DEPARTMENT=================*@
@using PersonnelManagement.Entities.Concrete
@using PersonnelManagement.Entities.DTOs;
@using PersonnelManagement.Mvc
@using PersonnelManagement.Mvc.Models
@model dynamic
@{
}
<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Your page title</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/css/ui.jqgrid.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>var $ = jQuery.noConflict(false);</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/jquery.jqgrid.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.all.min.js"></script>

</head>

<body>


    <div id="container" style="position: relative;">
        <button id ="addNewButton" onclick="onClickNewAdd()">Add New</button>
        <input type="text" id="mySearchBox"  placeholder="Arama..." class="searchBar" style="position: absolute; top: 0; margin-left: 630px;">

        <table id="jqGrid"></table>
        <div id="jqGridPager"></div>
    </div>

    <div id = "addModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_AddDepartmentPartial")
        </div>
    </div>

    <div id = "editModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_UpdateDepartmentPartial")
        </div>
    </div>

    <script  type="text/javascript">

        var currentId = 0;

        var grid = $("#jqGrid");

        function onNeedReload(){
                debugger;
                grid.setGridParam({ datatype: 'json' });
                debugger;
                grid.trigger("reloadGrid", [{page: 1, current: true}]);
        }

        $("#jqGrid").jqGrid({
                url: '/Department/GetDepartments',
                mtype: "POST",
                datatype: "json",
                colnames: ["DepartmentId", "DepartmentName"],
                colModel: [
                    { label: 'Id', name: 'DepartmentId', key:true, width: 15 },
                    { label: 'Department', name: 'DepartmentName', width: 75, sorttype: function(cell, obj) {return turkishToLower(cell);} },
                    {
                        name: 'actions',
                        index: 'actions',
                        width: 100,
                        align: 'center',
                        sortable: false,
                        formatter: function(cellvalue, options, rowObject) {
                            return '<button class="edit_btn" >Edit</button>&nbsp;&nbsp;&nbsp;' + 
                                    '<button href="#" class="del_btn" >Delete</button>';
                        }
                    }

                ],
                loadonce: true,
                navOptions:{reloadGridOptions:{fromServer:true}},
                multiSort: true,
                multiSelect: true,
                sortable: true,
                viewrecords: true,
                search: true,
                width: 900,
                height: 250,
                rowNum: 50,
                pager: "#jqGridPager",


        });

        $("#mySearchBox").keyup(function () {
            debugger;
            var rules = [], i, cm,
            postData = grid.jqGrid("getGridParam", "postData"),
            colModel = grid.jqGrid("getGridParam", "colModel"),
            searchText = $("#mySearchBox").val(),
            l = colModel.length;

            for (i = 0; i < l; i++) {
                cm = colModel[i];
                    if (cm.search !== false && (typeof cm.stype === "undefined" || cm.stype === "text")) {
                        rules.push({
                        field: cm.name,
                        op: "cn",
                        data: searchText
                    });
                }
            }

            $.extend (postData, {
                filters: {
                    groupOp: "OR",
                    rules: rules
                }
            });

            grid.jqGrid("setGridParam", { search: true, postData: postData });
            grid.trigger("reloadGrid", [{page: 1, current: true}]);
            return false;
        });

        $(document).on('click', '.edit_btn', function () {

            var row = $(this).closest('tr.jqgrow');
            var rowId = row.attr('id');
            var rowName = row.find('td:eq(1)').text();
            var myModel = @Html.Raw(Json.Serialize(Model));
            debugger;
            currentId = rowId;
            var modifiedByName = "mvcDefault" //şimdilik

            document.getElementById("inputtedName2").value = rowName;

            $.ajax({
                url: "/Department",
                type: "GET",
                success: function (result) {
                $("#editModal.modal-content").html(result);
                document.getElementById("editModal").style.display = "block";
                }
            });

        });

        $(document).on('click', '.del_btn', function () {
            debugger;
            var row = $(this).closest('tr.jqgrow');
            var rowId = row.attr('id');

            var modifiedByName = "mvcDefault" //şimdilik

            var choosedDepartment = {
                DepartmentId: rowId,
                ModifiedByName: modifiedByName,
            };
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed){
                    $.ajax({
                        type: "POST",
                        url: "/Department/DeleteDepartments",
                        data: choosedDepartment,
                        success: function(data) {
                            Swal.fire(
                                'Deleted!',
                                'Your choose has been deleted.',
                                'success'
                            )
                            onNeedReload();
                        },
                        error: function(error) {
                            Swal.fire(
                                'Error!',
                                'Deleting failed.',
                                'error'
                            )
                        }

                    });
                }
            });
        });

        $(document).ready(function() {

            onClickNewAdd = function() {
                debugger;
                console.log("clicked")
                    $.ajax({
                            url: "/Employee",
                            type: "GET",
                            success: function (result) {
                            $("#addModal.modal-content").html(result);
                            document.getElementById("addModal").style.display = "block";
                            debugger;
                            }
                    });
            }

            var myModel = @Html.Raw(Json.Serialize(Model));
            var reloadNeed = true;

            onClickSave = function(){
                var inputtedDepartment = $('#inputtedDepartment').val()

                var departmentData = {
                    NewDepartment: inputtedDepartment
                };
                debugger;

                $.ajax({
                    type: "POST",
                    url: "/Department/AddDepartment",//hatırla
                    data: departmentData,
                    success: function(data) {

                        document.getElementById("myModal").style.display = "none";
                        $("#inputtedName").val('');
                    },
                    error: function(error) {
                    console.log(error);
                    }
                });

                onNeedReload();
            }
            
            onClickUpdate = function(){
                var modifiedByName = "mvcDefault" //şimdilik
                var inputtedName = $('#inputtedName2').val()

                var departmentData = {
                    DepartmentId: currentId,
                    NewDepartment: inputtedName,
                    modifiedByName: modifiedByName
                };

                document.getElementById("editModal").style.display = "none";

                Swal.fire({
                    title: 'Are you sure about that?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, update it!'
                }).then((result) => {
                    if (result.isConfirmed){
                        $.ajax({
                            type: "POST",
                            url: "/Department/UpdateDepartments",
                            data: departmentData,
                            success: function(data) {
                                Swal.fire(
                                    'Updated!',
                                    'Your choose has been deleted.',
                                    'success'
                                )
                                onNeedReload();
                            },
                            error: function(error) {
                                Swal.fire(
                                    'Error!',
                                    'Deleting failed.',
                                    'error'
                                )
                            }
                        });
                    }
                });
            }

        });

        function turkishToLower(str) {
            return str.replace(/Ğ/g, 'g').replace(/Ü/g, 'u').replace(/Ş/g, 's').replace(/İ/g, 'i').replace(/I/g, 'i').toLocaleLowerCase('tr');
        }

    </script>
</body>

</html>