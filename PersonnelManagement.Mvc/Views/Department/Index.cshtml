@*==============DEPARTMENT=================*@
@using PersonnelManagement.Entities.Concrete
@using PersonnelManagement.Entities.DTOs;
@using PersonnelManagement.Mvc
@using PersonnelManagement.Mvc.Models
@model dynamic
@{
    string sweetAlertTheme = "https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@5/dark.css";
}
<!DOCTYPE html>

<html lang="en">

<head>

    <!--||||||||||||||||||||||||||||||||||||||||||JQGRID VE JQUERY KAYNAKLARI||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/css/ui.jqgrid.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.min.css" rel="stylesheet" />
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>var $ = jQuery.noConflict(false);</script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/jquery.jqgrid.min.js"></script>
    <link rel="stylesheet" href=@sweetAlertTheme />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.all.min.js"></script>
   <style>
body {
    background-color: #2a2b2f;
    /*display: flex;*/
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}
.container {
    max-width: 90%;
    max-height: 90%;
    margin-top:5% auto;
    margin-right: 8% auto;
    margin-left: 8% auto;
    margin-bottom: 8% auto;
    padding: 2%;
    border: 2px solid #559cca;
    text-align: center;
}

.searchBoxContainer {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 10px;
}

.searchBar {
    flex: 1;
    padding: 5px;
    background-color: #4c4b49;
    color: white;
    border: 2px solid #559cca;
    outline: none;
}

.button {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}

.edit_btn {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}
.del_btn {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}
</style>

</head>

<body>
    <h2 style="color:white; margin-left:10%; margin-top:2%; margin-bottom:2%;">Departmanlar</h2>

    <div id="container" class="container" style="position: relative;">

          <div class="searchBoxContainer">
                <input type="text" id="mySearchBox" placeholder="Arama..." class="searchBar">
                <button id="Ekle" class="button" onclick="openPartialForm()">+</button>
          </div>

      <table id="jqGrid"></table>
      <div id="jqGridPager"></div>
    </div>

    <div id="partialZone" class="modal" style="display:none">
        <div id="partialZoneContent" @*class="modal-content"*@></div>
    </div>

    <script  type="text/javascript">

        var grid = $("#jqGrid");

        function onNeedReload(){
                debugger;
                grid.setGridParam({ datatype: 'json' });
                debugger;
                var pageCount = grid.getGridParam("lastpage");
                for (let i = 0; i < pageCount; i++) {
                        grid.trigger("reloadGrid", [{page: i, current: true}]);
                }
        }



        function setGridWidth() {
            var containerWidth = $('.container').width(); // Container'ın genişliğini alın

            // jqGrid'in genişliğini hesaplayın
            var gridWidth = containerWidth;

            // jqGrid'in genişliğini ayarlayın
            grid.jqGrid('setGridWidth', gridWidth);
        }

        $("#jqGrid").jqGrid({
                url: '/Department/GetDepartments',
                mtype: "POST",
                datatype: "json",
                colnames: ["Id", "Name"],
                colModel: [
                    { label: 'Id', name: 'Id', key:true, width: 15, hidden:true },
                    { label: 'Department', name: 'Name', width: 100, sorttype: function(cell, obj) {return turkishToLower(cell);} },
                    {
                        name: 'actions',
                        index: 'actions',
                        width: 15,
                        align: 'center',
                        sortable: false,
                        formatter: function(cellvalue, options, rowObject) {
                            return '<button class="edit_btn" >Edit</button>&nbsp;&nbsp;&nbsp;' + 
                                    '<button href="#" class="del_btn" >Delete</button>';
                        }
                    }

                ],
                loadonce: true,
                navOptions:{reloadGridOptions:{fromServer:true}},
                multiSort: true,
                multiSelect: true,
                sortable: true,
                viewrecords: true,
                search: true,
                //width: "auto",
                height: 250,
                rowNum: 9,
                pager: "#jqGridPager",


        });

        $("#mySearchBox").keyup(function () {
            debugger;
            var rules = [], i, cm,
            postData = grid.jqGrid("getGridParam", "postData"),
            colModel = grid.jqGrid("getGridParam", "colModel"),
            searchText = $("#mySearchBox").val(),
            l = colModel.length;

            for (i = 0; i < l; i++) {
                cm = colModel[i];
                    if (cm.search !== false && (typeof cm.stype === "undefined" || cm.stype === "text")) {
                        rules.push({
                        field: cm.name,
                        op: "cn",
                        data: searchText
                    });
                }
            }

            $.extend (postData, {
                filters: {
                    groupOp: "OR",
                    rules: rules
                }
            });

            grid.jqGrid("setGridParam", { search: true, postData: postData });
            grid.trigger("reloadGrid", [{page: 1, current: true}]);
            return false;
        });

        $(document).on('click', '.edit_btn', function () {

            var row = $(this).closest('tr.jqgrow');
            var rowId = row.attr('id');


            document.getElementById("partialZone").style.display = "block";
                $("#partialZoneContent").load("Department/AddOrUpdateDepartment?id=" + rowId);

        });

        $(document).on('click', '.del_btn', function () {
            debugger;
            var row = $(this).closest('tr.jqgrow');
            var rowId = row.attr('id');

            var choosedDepartment = {
               Id: rowId,
            };
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed){
                    $.ajax({
                        type: "POST",
                        url: "/Department/DeleteDepartments",
                        data: choosedDepartment,
                        success: function(data) {
                            Swal.fire(
                                'Deleted!',
                                'Your choose has been deleted.',
                                'success'
                            )
                            onNeedReload();
                        },
                        error: function(error) {
                            Swal.fire(
                                'Error!',
                                'Deleting failed.',
                                'error'
                            )
                        }

                    });
                }
            });
        });

        $(document).ready(function() {

            openPartialForm = function() {
                debugger;
                console.log("clicked");
                document.getElementById("partialZone").style.display = "block";
                $("#partialZoneContent").load("Department/AddOrUpdateDepartment");
            };

            var myModel = @Html.Raw(Json.Serialize(Model));
            var reloadNeed = true;
            onNeedReload();
            setGridWidth();

        });

        $(window).on('resize', function() {
                setGridWidth();
        });

        function turkishToLower(str) {
            return str.replace(/Ğ/g, 'g').replace(/Ü/g, 'u').replace(/Ş/g, 's').replace(/İ/g, 'i').replace(/I/g, 'i').toLocaleLowerCase('tr');
        }

    </script>
</body>

</html>
