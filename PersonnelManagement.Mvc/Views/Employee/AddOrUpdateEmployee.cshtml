@model PersonnelManagement.Mvc.Models.EmployeeModel

@{
    
}

<div class="container" style="border:none">
﻿<div class="custom-model-inner">
    <div class="close-btn" onclick="closeModal()">×</div>
    <div class="custom-model-wrap">
        <div class="pop-up-content-wrap">

            <!-- ======= Operations Section ======= -->
            <section id="portfolio-details" class="portfolio-details">
                <div class="container">

                    <form id ="empForm" method="post" onsubmit="return false" asp-controller="Employee" asp-action="AddOrUpdateEmployee">
                            @Html.HiddenFor(e => e.Id)
                            @Html.DropDownListFor(e => e.DepartmentId, new SelectList(Model.Departments, "Id", "Name", Model.DepartmentId), "Departmanı Seçin", new { @id = "deplist", @onchange = "onDepartmentChange(this)", @class = "textBox", @placeholder = "Departmanı Seçin" })
                            @Html.DropDownListFor(e => e.PositionId, new SelectList(Model.Positions.Where(p => p.DepartmentId == Model.DepartmentId), "Id", "Name", Model.PositionId), "Pozisyonu Seçin", new { @id = "poslist", @class = "textBox", @style="margin-top:5px;" , @placeholder = "Pozisyonu Seçin"})
                            <div style="display: flex; gap: 10px; width:100%; margin-top:5px;">
                                @Html.TextBoxFor(e => e.Name, new { @class = "textBox", @placeholder = "İsim Giriniz.", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\sçÇğĞıİöÖşŞüÜ]/g, '')" })
                                @Html.TextBoxFor(e => e.Surname, new { @class = "textBox", @placeholder = "Soyisim Giriniz.", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\sçÇğĞıİöÖşŞüÜ]/g, '')" })
                            </div>
                            <div style="display: flex; gap: 10px; width:100%; margin-top:5px;">
                                @Html.TextBoxFor(e => e.IdentityNumber, new { @class= "textBox", @placeholder = "Tc Kimlik Numarası", @oninput = "this.value = this.value.replace(/[^0-9]/g, '')", @minlength = "10", @maxlength = "10", })
                                @Html.TextBoxFor(e => e.BirthDate, "{0:yyyy-MM-dd}", new { @class = "textBox", @type = "text", @id = "birthDate", @onfocus = "this.type='date'", @onblur = "if(this.value==''){this.type='text'}", @placeholder = "Doğum Tarihi" })
                                @*@Html.TextBoxFor(e => e.BirthDate, "{0:yyyy-MM-dd}", new { @class = "textBox", @type = "date", @id = "birthDate", @placeholder = "Doğum Tarihi"})    *@
                                    @Html.DropDownListFor(e => e.GenderId, new SelectList(Model.Genders, "Key", "Value", Model.GenderId), "Cinsiyet", new { @id = "genders", @class = "textBox",@style = "width: 10%;", @placeholder = "Cinsiyet" })
                                    @Html.DropDownListFor(e => e.BloodTypeId, new SelectList(Model.BloodTypes, "Key", "Value", Model.BloodTypeId), "Kan Grubu", new { @id = "bloodType", @class = "textBox",@style = "width: 10%;", @placeholder = "Kan Grubu" })
                                
                            </div>
                            @Html.TextAreaFor(e => e.Adress, new { @class = "textBox", @style="margin-top:5px;" , @placeholder = "Adres Giriniz.", @rows = "3"})
                            <hr />
                            <div1>
                            <a class="tab-link active" data-tab="1">Yeni Başladı</a>
                            <a class="tab-link" data-tab="2">İşten Ayrılıyor</a>
                          </div1>
                          <div class="tab_content">
                            <div id="tab-1" class="tab-content active">
                                <div style="display: flex; gap: 10px;margin-top:5px;">
                                        @Html.TextBoxFor(e => e.StartOfWork, "{0:yyyy-MM-dd}", new { @class = "textBox", @type = "text", @id = "startDate", @onfocus = "this.type='date'", @onblur = "if(this.value==''){this.type='text'}", @placeholder = "İşe Başlama Tarihi" })
                                        @Html.TextBoxFor(e => e.NetSalary, new { @class= "textBox", @placeholder = "Maaş (TL)", @oninput = "this.value = this.value.replace(/[^0-9]/g, '')", @minlength = "10", @maxlength = "10", })
                                </div>
                                <div style="display: flex; gap: 10px;margin-top:5px;">
                                        @Html.TextBoxFor(e => e.InsuranceStartDate, "{0:yyyy-MM-dd}", new { @class = "textBox", @type = "text", @id = "insuranceStartDate", @onfocus = "this.type='date'", @onblur = "if(this.value==''){this.type='text'}", @placeholder = "Sigorta Başlangıç Tarihi" })
                                        @Html.TextBoxFor(e => e.GrossSalary, new { @class= "textBox", @placeholder = "Sigorta Gideri (TL)", @oninput = "this.value = this.value.replace(/[^0-9]/g, '')", @minlength = "10", @maxlength = "10", })
                                        @Html.DropDownListFor(e => e.InsuranceId, new SelectList(Model.InsuranceTypes, "Key", "Value", Model.InsuranceId), "Sigorta Türü", new { @id = "insurances", @class = "textBox",@style = "width: 20%;", @placeholder = "Sigorta Türü" })
                                </div>
                            </div>
                            <div id="tab-2" class="tab-content">
                                        @Html.TextBoxFor(e => e.EndOfWork, "{0:yyyy-MM-dd}", new { @class = "textBox", @type = "text", @id = "startDate", @onfocus = "this.type='date'", @onblur = "if(this.value==''){this.type='text'}", @placeholder = "İşten Ayrılma Tarihi" })
                                        @Html.TextAreaFor(e => e.EndReason, new { @class = "textBox", @style="margin-top:5px;" , @placeholder = "İşten Ayrılma Nedeni.", @rows = "3"})

                                
                            </div>
                          </div>
                            @Html.ValidationMessageFor(e=>e.Name)

                    <br />
                    <button id ="saveBtn" class="button" style="margin-top:10px; width:60%;" type= "submit" onclick="savePosition()">Save</button>
                    </form>

                </div>
            </section><!-- End Operations Section -->
        </div>
    </div>  
</div>  </div>

<link href="~/css/popUp.css" rel="stylesheet">

<script>

    debugger;
    function savePosition() {
        debugger;
    var form = document.getElementById("empForm");
    var formData = new FormData(form);
    var opType = "@TempData["OperationType"]";
    var itemName = "@Model.Name";

    //
    Swal.fire({
        title: 'Emin misiniz?',
        text: itemName + ' adlı çalışanı' + opType + 'işlemi yapmak istediğinizden emin misiniz?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Kabul Et',
        cancelButtonText: 'Vazgeç'
    }).then((result) => {
        if (result.isConfirmed){
            $.ajax({
                type: "POST",
                url: "/Employee/SaveEmployee",
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                success: function(data) {
                    Swal.fire(
                        opType + 'İşlemi Başarılı!',
                        data.message,
                        'success'
                    )
                    onNeedReload();
                },
                error: function(error) {
                    Swal.fire(
                        'Hata!',
                        error.message,
                        'error'
                    )
                }
            });
        }

    });
    document.getElementById("partialZone").style.display = "none";
}

function onDepartmentChange(selectElement) {
  var departmentId = selectElement.value;
  var positions = @Html.Raw(Json.Serialize(Model.Positions)); // Model.Positions veri kaynağını JavaScript nesnesine dönüştürür
  debugger;
  var positionSelect = document.getElementById('poslist');
  positionSelect.innerHTML = ''; // Pozisyon dropdown'ını temizler
  debugger;
  // Seçilen departmanın idsi ile eşleşen pozisyonları bulur ve dropdown'a ekler
  debugger;
  for (var i = 0; i < positions.length; i++) {
    if (positions[i].departmentId == departmentId) {
      var option = document.createElement('option');
      option.value = positions[i].id;
      option.text = positions[i].name;
      positionSelect.appendChild(option);
    }

      debugger;
  }
}

    function closeModal(){
        document.getElementById("partialZone").style.display = "none";
    }
</script>

<script>
    $("div1 a").click(function() {
      var tabID = $(this).attr("data-tab");
      debugger;
      if (tabID == "1") {
            $("#isSpecial").val("False");
      }

      if (tabID == "2") {
            $("#isSpecial").val("True");
      }

      $(this).addClass("active").siblings().removeClass("active");

      $(".tab-content")
        .removeClass("active")
        .hide();

      $("#tab-" + tabID)
        .addClass("active")
        .fadeIn();
    });
</script>

<style>
.modal {
  display: block;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  padding-left: 50px;
  left: 0;
  top: 0;
  height: 100%;
  overflow: auto; 
  background-color: rgb(0,0,0); 
  background-color: rgba(0,0,0,0.4);
}

/*.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 25%;
}*/

div1 {
  /*width: 795px;*/
  margin: auto;
  display: block;
  text-align: center;
}

div1 a {
  text-decoration:none;
  margin-right: 1rem;
  list-style: none;
  padding: 1rem;
  cursor: pointer;
  border-bottom: solid 4px ghostwhite;
  color: ghostwhite;
  transition: all ease 0.4s;
}

div1 a:hover {
  color: aqua; /*text color*/
  border-color: aqua;
  font-size: 20px;
}

div1 a.active {
  color: #559cca;
  border-color: #559cca;
}

.tab_content {
  padding: 40px 80px;
}

.other_content {
  padding: 40px 80px;
}

.tab-content {
  display: none;
  text-align: center;
  color: whitesmoke;
  transform: translateY(15px);
  animation: tab_fade 0.4s ease 1 forwards;
}

.tab-content.active {
  display: block;
}
</style>