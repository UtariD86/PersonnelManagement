@*==========================================================*@
@using PersonnelManagement.Entities.Concrete
@using PersonnelManagement.Entities.DTOs;
@using PersonnelManagement.Mvc
@using PersonnelManagement.Mvc.Models
@model dynamic
@{
}
<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Your page title</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/css/ui.jqgrid.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>var $ = jQuery.noConflict(false);</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/jquery.jqgrid.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.all.min.js"></script>

</head>

<body>


    <button id ="addNewButton" onclick="onClickNewAdd()">Add New</button>



    <div id = "myModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_AddEmployeePartial")
        </div>
    </div>

    <table id="jqGrid"></table>
    <div id="jqGridPager"></div>

    <script  type="text/javascript">

        $("#jqGrid").jqGrid({
                url: '/Employee/GetEmployees',
                mtype: "POST",
                datatype: "json",
                colnames: ["EmployeeId","EmployeeName", "DepartmentName", "PositionName"],
                colModel: [
                    { label: 'EmployeeId', name: 'EmployeeId', key:true,  width: 15 },
                    { label: 'EmployeeName', name: 'EmployeeName', width: 150,sortable: true , sorttype: function(cell, obj) { return cell.toLowerCase(); }},
                    { label: 'DepartmentName', name: 'DepartmentName', width: 75 },
                    { label: 'PositionName', name: 'PositionName', width: 75 },
                    {
                        name: 'actions',
                        index: 'actions',
                        width: 100,
                        align: 'center',
                        sortable: false,
                        formatter: function(cellvalue, options, rowObject) {
                            return '<button class="edit_btn" >Edit</button>&nbsp;&nbsp;&nbsp;' + 
                                    '<button href="#" class="del_btn" >Delete</button>';
                        }
                    }

                ],
                //sortname: 'EmployeeName',
                //sortorder: 'asc',
                viewrecords: true,
                width: 900,
                height: 250,
                rowNum: 50,
                pager: "#jqGridPager",

        });

        //$( '#jqGrid' ).trigger( 'reloadGrid');

        //$('#jqGrid').jqGrid('sortGrid', 'EmployeeName', true, 'asc');

        $(document).on('click', '.edit_btn', function () {
            debugger;
                var employeeName2 = $(this).data('employee-name');
                console.log('Employee Name:', employeeName);
                debugger;
                    window.alert("Edit!!")

                debugger;
                var row = $(this).closest('tr.jqgrow');
                var rowId = row.attr('id');
                debugger;
                var rowData = $('#jqGrid').jqGrid('getRowData', rowId);
                var employeeName = rowData.EmployeeName;
                debugger;
                var employeeName = rowId.EmployeeName;

                debugger;
        });

        $(document).on('click', '.del_btn', function () {
                var row = $(this).closest('tr.jqgrow');
                var rowId = row.attr('id');

                var modifiedByName = "mvcDefault" //şimdilik

                var choosedEmployee = {
                    EmployeeId: rowId,
                    ModifiedByName: modifiedByName,
                };
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {

                        $.ajax({
                            type: "POST",
                            url: "/Employee/DeleteEmployees",
                            data: choosedEmployee,
                            success: function(data) {
                                $( '#jqGrid' ).trigger( 'reloadGrid');
                            },
                            error: function(error) {
                                console.log(error);
                            }
                        });


                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        )
                    }
                })




        });

        //$('#gview_' + '#jqGrid' + ' .ui-jqgrid-view').on('click', '.ui-jqgrid-sortable', function() {
        //$('#jqGrid').on('click', '.ui-jqgrid-sortable', function() {

        //    debugger;

        //        var colName = $(this).attr('id'); // Sıralama yapılacak sütunun adını al
        //        var sortOrder = $('#jqGrid').jqGrid('getGridParam', 'sortorder'); // Varsayılan sıralama yöntemini al

        //        debugger;

        //        if (sortOrder === 'asc') {
        //            sortOrder = 'desc'; // Sıralama yöntemini tersine çevir
        //        } else {
        //            sortOrder = 'asc';
        //        }

        //        debugger;

        //        $('#jqGrid').jqGrid('setGridParam', {
        //            sortname: colName, // Sıralama yapılacak sütunun adını ayarla
        //            sortorder: sortOrder // Sıralama yöntemini ayarla
        //        }).trigger('reloadGrid'); // jqGrid'i yeniden yükle

        //        debugger;
        //});


        $( '#jqGrid' ).trigger( 'reloadGrid');

        $(document).ready(function() {

            onClickNewAdd = function() {
                debugger;
                console.log("clicked")
                    $.ajax({
                            url: "/Employee",
                            type: "GET",
                            success: function (result) {
                            $("#myModal.modal-content").html(result);
                            document.getElementById("myModal").style.display = "block";
                            debugger;
                            }
                    });
            }

            var myModel = @Html.Raw(Json.Serialize(Model));
            onDepartmentChange = function(){
                var selectedDepartment = $('#deplist option:selected').text()
                var options = "";

                for (var i = 0; i < myModel.Positions.length;) {

                    if(myModel.Positions[i].departmentName == selectedDepartment){

                        options += "<option value='" + myModel.Positions[i].positionName + "'>" + myModel.Positions[i].positionName + "</option>";

                    }
                    i++;
                }

                $('#poslist').html(options)

            };

            ////partial geldikten sonra çalışması gerekiyor olabilir
            onClickSave = function(){
                var inputtedName = $('#inputtedName').val()
                var selectedDepartment = $('#deplist option:selected').text()
                var selectedPosition = $('#poslist option:selected').text()

                var employeeData = {
                    NewEmployee: inputtedName,
                    SelectedDepartment: selectedDepartment,
                    SelectedPosition: selectedPosition
                };

                $.ajax({
                    type: "POST",
                    url: "/Employee/AddEmployees",//hatırla
                    data: employeeData,
                    success: function(data) {

                        document.getElementById("myModal").style.display = "none";
                    },
                    error: function(error) {
                    console.log(error);
                    }
                });
            }
        });



    </script>
</body>

</html>