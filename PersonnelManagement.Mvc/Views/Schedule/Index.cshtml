@using PersonnelManagement.Entities.Concrete
@using PersonnelManagement.Entities.DTOs;
@using PersonnelManagement.Mvc
@using PersonnelManagement.Mvc.Models
@model dynamic
@{
    string sweetAlertTheme = "https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@5/dark.css";
}
<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Your page title</title>

    <!--||||||||||||||||||||||||||||||||||||||||||JQGRID VE JQUERY KAYNAKLARI||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/css/ui.jqgrid.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.min.css" rel="stylesheet" />
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>var $ = jQuery.noConflict(false);</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/jquery.jqgrid.min.js"></script>
    @*  <link rel="stylesheet" href=@sweetAlertTheme />*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.all.min.js"></script>


    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.4/index.global.min.js'></script>
    <script src='https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <style>

/* Middle Banner Text (month, day, year */

h2.fc-toolbar-title{

color: #A6A7A8;

font-size: 20px;

}

/* calendar day numbers */

a.fc-daygrid-day-number{

font-size: 20px;

color: #A6A7A8;

}

/* Days of the week (mon, the, wed) */

a.fc-col-header-cell-cushion{

font-size: 20px;

color: #78BEEB;

}

/* Event Text */

div.fc-event-title.fc-sticky{

font-size: 15px;

}

/* selected / active state */

button.fc-dayGridMonth-button.fc-button.fc-button-primary.fc-button-active{

background-color: pink;

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #559cca;

text-transform: uppercase;

box-shadow: 0;

}

button.fc-timeGridWeek-button.fc-button.fc-button-primary.fc-button-active{

background-color: pink;

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #559cca;

text-transform: uppercase;

box-shadow: 0;

}

button.fc-timeGridDay-button.fc-button.fc-button-primary.fc-button-active{

background-color: pink;

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #559cca;

text-transform: uppercase;

box-shadow: 0;

}

/* Hover state */

button.fc-dayGridMonth-button.fc-button.fc-button-primary:hover{

background-color: #559cca;

/*border: 2px solid #FFFFFF;*/

}

button.fc-timeGridWeek-button.fc-button.fc-button-primary:hover{

background-color: #559cca;

/*border: 2px solid #FFFFFF;*/

}

button.fc-timeGridDay-button.fc-button.fc-button-primary:hover{

background-color: #559cca;

/*border: 2px solid #FFFFFF;*/

}

/* default color when button is not selected */

button.fc-dayGridMonth-button.fc-button{

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #78BEEB;

text-transform: uppercase;

}

button.fc-timeGridWeek-button.fc-button{

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #78BEEB;

text-transform: uppercase;

}

button.fc-timeGridDay-button.fc-button{

/*border: 2px solid #FFFFFF;*/

padding: 10px 24px;

background-color: #78BEEB;

text-transform: uppercase;

}

/* Arrows (previous month, next month and today button */

button.fc-prev-button.fc-button.fc-button-primary{

/*border: 2px solid #FFFFFF;*/

background-color: #78BEEB;

}

button.fc-next-button.fc-button.fc-button-primary{

/*border: 2px solid #FFFFFF;*/

background-color: #78BEEB;

{

button.fc-today-button.fc-button.fc-button-primary{

/*border: 2px solid #FFFFFF;*/

background-color: #78BEEB;

{

</style>
    <style>
body {
    background-color: #2a2b2f;
    /*display: flex;*/
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}
.container {
    max-width: 90%;
    margin-top:5% auto;
    margin-right: 8% auto;
    margin-left: 8% auto;
    margin-bottom: 8% auto;
    padding: 2%;
    border: 2px solid #559cca;
    text-align: center;
}

.searchBoxContainer {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 10px;
}

.searchBar {
    flex: 1;
    padding: 5px;
    background-color: #4c4b49;
    color: white;
    border: 2px solid #559cca;
    outline: none;
}

.button {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}

.edit_btn {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}
.del_btn {
    padding: 5px 10px;
    margin-left: 10px;
    background-color: #4c4b49;
    color: #559cca;
    border: 2px solid #559cca;
    cursor: pointer;
}
</style>
     <script>
    $(function() {
      var allGrids = $("table[id^='jqGrid']");

      allGrids.each(function() {
        var grid = $(this);
        grid.on("gridComplete", function() {
          var rows = grid.jqGrid('getDataIDs');
          for (var i = 0; i < rows.length; i++) {
            var rowData = grid.jqGrid('getRowData', rows[i]);
            var color = rowData.Color;
            $('#' + rows[i]).css('background-color', color);
          }
        });
      });
    });
  </script>

    <script>

  document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');
    var today = new Date();
    var day = today.getDate();
    var month = today.getMonth() + 1;
    var year = today.getFullYear();
    if (day < 10) {
        day = '0' + day;
    }
    if (month < 10) {
        month = '0' + month;
    }
    var formattedDate = year + '-' + month + '-' + day;
    var calendar = new FullCalendar.Calendar(calendarEl, {
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'dayGridMonth,timeGridWeek,timeGridDay'
      },
      initialDate: formattedDate,
      locale: "tr",
      themeSystem: "jquery-ui",
      navLinks: true, // can click day/week names to navigate views
      selectable: true,
      selectMirror: true,
      eventDisplay: "block",
      select: function(arg) {
          var date = arg.startStr;
          document.getElementById("partialZoneSs").style.display = "block";
          $("#partialZoneContentSs").load("/Schedule/AddOrUpdateScheduleShift?date="+date);
          debugger;
        //var title = prompt('Event Title:');
        //if (title) {
        //  calendar.addEvent({
        //    title: title,
        //    start: arg.start,
        //    end: arg.end,
        //    allDay: arg.allDay
        //  })
        //}
        calendar.unselect()
      },
      eventClick: function(arg) {
          var eventId = arg.event.id
          var modifiedByName = "clicker"
          Swal.fire({
            title: 'Hangi işlemi Yapmak istersiniz?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Show Details',
            denyButtonText: 'Delete',
            customClass: {
                actions: 'my-actions',
                cancelButton: 'order-1 right-gap',
                confirmButton: 'order-2',
                denyButton: 'order-3',
            }
          }).then((result) => {
          if (result.isConfirmed) {///////////////////////////////////////////////////Update
              var detailTitle = arg.event._def.extendedProps.description;
              var detailOwner = arg.event._def.title;
              var detailStart = moment(arg.event.start).format('DD/MM/yyyy');
              var detailEnd = moment(arg.event.end).format('DD/MM/yyyy');
              debugger;
              Swal.fire({
                title: '<strong style="font-size: 25px;">'+ detailOwner +'</strong>',
                icon: 'question',
                html:
                '<b>Start Date: </b> ' + detailStart +
                '<br/><b>End Date: </b> ' + detailEnd +
                '<br/><b>Hours: </b>' + detailTitle,
                showCloseButton: false,
                showCancelButton: false,
                focusConfirm: false,
                confirmButtonText:
                '<i class="fa fa-thumbs-up"></i> Great!',
                confirmButtonAriaLabel: 'Thumbs up, great!',
                cancelButtonText:
                '<i class="fa fa-thumbs-down"></i>',
                cancelButtonAriaLabel: 'Thumbs down'
              })
          } else if (result.isDenied) {//////////////////////////////////////////////Delete
              var DeleteScheduleShiftData = {
                    Id : eventId
              }

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {

                        $.ajax({
                            type: "POST",
                            url: "/Schedule/DeleteScheduleShift",
                            data: DeleteScheduleShiftData,
                            success: function(data) {
                                Swal.fire(
                                    'Deleted!',
                                    'Your choose has been deleted.',
                                    'success'
                                )
                                onNeedReload();
                            },
                            error: function(error) {
                                Swal.fire(
                                    'Error!',
                                    'Deleting failed.',
                                    'error'
                                )
                            }
                        });



                    }
                })
              //Swal.fire('Deleted', '', 'success')
          }
})
      },
      editable: true,
      dayMaxEvents: true, // allow "more" link when too many events
      eventDidMount: function (info) {
          var detailTitle = info.event._def.extendedProps.description;
          var detailOwner = info.event._def.title
            $(info.el).popover({
                title: detailTitle,
                placement: 'top',
                trigger: 'hover',
                content: detailOwner,
                container: 'body'
            });
      },
      eventRender: function(info) {
      //  var tooltip = new Tooltip(info.el, {
      //      title: info.event.extendedProps.description,
      //      placement: 'top',
      //      trigger: 'click',
      //      container: 'body'
      //  });
      },
      events: "/Schedule/GetCalendarDatas/"
    });

    calendar.render();
  });

</script>
<style>

  body {
    margin: 40px 10px;
    padding: 0;
    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
    font-size: 14px;
  }

  #calendar {
    max-width: 1100px;
    margin: 0 auto;
  }

  .popper,
.tooltip {
  position: absolute;
  z-index: 999;
  background: #FFC107;
  color: black;
  width: 150px;
  border-radius: 3px;
  box-shadow: 0 0 2px rgba(0,0,0,0.5);
  padding: 10px;
  text-align: center;
}
.style5 .tooltip {
  background: #1E252B;
  color: #FFFFFF;
  max-width: 200px;
  width: auto;
  font-size: .8rem;
  padding: .5em 1em;
}
.popper .popper__arrow,
.tooltip .tooltip-arrow {
  width: 0;
  height: 0;
  border-style: solid;
  position: absolute;
  margin: 5px;
}

.tooltip .tooltip-arrow,
.popper .popper__arrow {
  border-color: #FFC107;
}
.style5 .tooltip .tooltip-arrow {
  border-color: #1E252B;
}
.popper[x-placement^="top"],
.tooltip[x-placement^="top"] {
  margin-bottom: 5px;
}
.popper[x-placement^="top"] .popper__arrow,
.tooltip[x-placement^="top"] .tooltip-arrow {
  border-width: 5px 5px 0 5px;
  border-left-color: transparent;
  border-right-color: transparent;
  border-bottom-color: transparent;
  bottom: -5px;
  left: calc(50% - 5px);
  margin-top: 0;
  margin-bottom: 0;
}
.popper[x-placement^="bottom"],
.tooltip[x-placement^="bottom"] {
  margin-top: 5px;
}
.tooltip[x-placement^="bottom"] .tooltip-arrow,
.popper[x-placement^="bottom"] .popper__arrow {
  border-width: 0 5px 5px 5px;
  border-left-color: transparent;
  border-right-color: transparent;
  border-top-color: transparent;
  top: -5px;
  left: calc(50% - 5px);
  margin-top: 0;
  margin-bottom: 0;
}
.tooltip[x-placement^="right"],
.popper[x-placement^="right"] {
  margin-left: 5px;
}
.popper[x-placement^="right"] .popper__arrow,
.tooltip[x-placement^="right"] .tooltip-arrow {
  border-width: 5px 5px 5px 0;
  border-left-color: transparent;
  border-top-color: transparent;
  border-bottom-color: transparent;
  left: -5px;
  top: calc(50% - 5px);
  margin-left: 0;
  margin-right: 0;
}
.popper[x-placement^="left"],
.tooltip[x-placement^="left"] {
  margin-right: 5px;
}
.popper[x-placement^="left"] .popper__arrow,
.tooltip[x-placement^="left"] .tooltip-arrow {
  border-width: 5px 0 5px 5px;
  border-top-color: transparent;
  border-right-color: transparent;
  border-bottom-color: transparent;
  right: -5px;
  top: calc(50% - 5px);
  margin-left: 0;
  margin-right: 0;
}

.my-actions { margin: 0 2em; }
.order-1 { order: 1; }
.order-2 { order: 2; }
.order-3 { order: 3; }

.right-gap {
  margin-right: auto;
}
</style>

<style>
        .ui-jqgrid {
            background-color: transparent !important;
        }
    </style>
</head>
<body>

    @*<div id = "addShiftTypeModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_AddShiftTypePartial")
        </div>
    </div>

    <div id = "updateShiftTypeModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_UpdateShiftTypePartial")
        </div>
    </div>

    <div id = "addScheduleShiftModal" class="modal" style="display:none">
        <div class="modal-content">
            @Html.Partial("_AddScheduleShiftPartial")
        </div>
    </div>*@
  <div class="container">
      <div id='calendar' style="position: relative; z-index: 0;"></div>
  </div>
    @*  <table>
      <tr>
          <th>Vardiya Tipleri</th>
      </tr>
        @foreach (var item in Model.shiftTypes)
        {
                                        <tr><td style="background-color:@item.Color; color:white"><span>&#8594;</span> @item.StartTime.ToString("hh\\:mm") - @item.EndTime.ToString("hh\\:mm") ~ @item.ShiftTypeName </td></tr>
        }
  </table>
 *@
    

    <div id="partialZoneSt" @*class="modal"*@ style="display:none">
        <div id="partialZoneContent" @*class="modal-content"*@></div>
    </div>
    <div id="partialZoneSs" class="modal" style="display:none">
        <div id="partialZoneContentSs"></div>
    </div>
    <button id="stButton" class="button" style=" position: fixed; bottom: 20px; right: 20px;" onclick="openShiftType()">Vardiyalara göz at</button>

</body>
<script type="text/javascript">

    //var grid2 = $("#jqGrid2");
    var selectedStRowId = -1;
    var row;
    //var calendar = $('#calendar');
    var rowId;
    var rowName;
    var rowSTime;
    var rowETime;
    var rowColor;

    function onNeedReload(){
                debugger;
                grid2.setGridParam({ datatype: 'json' });
                debugger;
                var pageCount = grid2.getGridParam("lastpage");
                for (let i = 0; i < pageCount; i++) {
                        grid2.trigger("reloadGrid", [{page: i, current: true}]);
                }
                //calendar.fullCalendar('refetchEvents');


        }

    $(document).ready(function () {
        debugger;
    //grid2.jqGrid({
    //    url: "Schedule/GetShiftTypes",
    //    datatype: "json",
    //    colModel: [
    //        { label: "Id", name: "ShiftTypeId", key: true, width:25},
    //        { label: "Vardiya Adı", name: "ShiftTypeName", width: 80 },
    //        { label: "Başlangıç Saati", name: "StartTime", width: 50 },
    //        { label: "Bitiş Saati", name: "EndTime", width: 50 },
    //        { label: "Renk Kodu", name: "Color", width:30},
    //        {
    //                    name: 'Settings',
    //                    index: 'Settings',
    //                    width: "40%",
    //                    align: 'center',
    //                    sortable: false,
    //                    formatter: function(cellvalue, options, rowObject) {
    //                        return '<button class="StEdit_btn" >Edit</button>&nbsp;&nbsp;&nbsp;' + 
    //                                '<button href="#" class="StDel_btn" >Delete</button>';
    //                    }
    //                }
    //    ],
    //    width: '800',
    //    height:'auto',
    //    rowNum: 20,
    //    pager: false,//"#jqGridPager",
    //    loadonce:true,
    //    gridComplete: function() {
    //        var rows = grid2.jqGrid('getDataIDs');
    //        for (var i = 0; i < rows.length; i++) {
    //            var rowData = grid2.jqGrid('getRowData', rows[i]);
    //            var color = rowData.Color;
    //             $('#gbox_' + grid2.attr('id') + ' #' + rows[i]).css('background-color', color);
    //        }
    //    }
    //});
});



       $(document).on('click', '.StEdit_btn', function () {

                    var row = $(this).closest('tr.jqgrow');
                    selectedStRowId = row.attr('id');
                    var rowId = selectedStRowId
                    var rowName = row.find('td:eq(1)').text();
                    var rowSTime = row.find('td:eq(2)').text();
                    var rowETime = row.find('td:eq(3)').text();
                    var rowColor = row.find('td:eq(4)').text();
                    debugger;
                    if(selectedStRowId != -1){
                debugger;
                $.ajax({
                url: "/Schedule",
                type: "GET",
                success: function (result) {
                    var myModel = @Html.Raw(Json.Serialize(Model));
                    debugger;
                    currentId = rowId;
                    var modifiedByName = "mvcDefault"; //şimdilik

                    document.getElementById("updatedShiftType").value = rowName;
                    document.getElementById("updatedStartTime").value = rowSTime;
                    document.getElementById("updatedEndTime").value = rowETime;
                    document.getElementById("updatedColor").value = rowColor;
                    debugger;
                    $("#updateShiftTypeModal.modal-content").html(result);
                    document.getElementById("updateShiftTypeModal").style.display = "block";
                }
            });
            }
       });

       $(document).on('click', '.StDel_btn', function () {
                debugger;
                var row = $(this).closest('tr.jqgrow');
                var rowId = row.attr('id');

                debugger;

                var modifiedByName = "mvcDefault" //şimdilik


                var DeleteShiftData = {
                    ShiftTypeId : rowId,
                    ModifiedByName: modifiedByName

                }
                document.getElementById("updateShiftTypeModal").style.display = "none";

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {

                        $.ajax({
                            type: "POST",
                            url: "/Schedule/DeleteShiftType",
                            data: DeleteShiftData,
                            success: function(data) {
                                Swal.fire(
                                    'Deleted!',
                                    'Your choose has been deleted.',
                                    'success'
                                )
                                onNeedReload();
                            },
                            error: function(error) {
                                Swal.fire(
                                    'Error!',
                                    'Deleting failed.',
                                    'error'
                                )
                            }
                        });



                    }
                })
                debugger;
        });
    $(document).ready(function() {

        var isSpecial = false;
        onClickNewAdd = function() {
            $.ajax({
                url: "/Schedule",
                type: "GET",
                success: function (result) {
                    $("#addShiftTypeModal.modal-content").html(result);
                    document.getElementById("addShiftTypeModal").style.display = "block";
                }
            });
        } 
        openShiftType = function() {
            //$.ajax({
            //    url: "/Schedule",
            //    type: "GET",
            //    success: function (result) {
            //        $("#shiftTypePartial.modal-content").html(result);
            //        document.getElementById("shiftTypePartial").style.display = "block";
            //        document.getElementById("stButton").style.display= "none";
            //    }
            //});
            document.getElementById("partialZoneSt").style.display = "block";
                $("#partialZoneContent").load("Schedule/ShiftTypes");
                document.getElementById("stButton").style.display = "none";
        }

        onClickSave = function(){
            debugger;
                var inputtedShiftType = $('#inputtedShiftType').val()
                var newStartTime = $('#inputtedStartTime').val()
                var newEndTime = $('#inputtedEndTime').val()
                var newColor =  $('#inputtedColor').val()
                debugger;
                var NewShiftData = {
                        InputtedShiftType : inputtedShiftType,
                        StartTime : newStartTime,
                        EndTime : newEndTime,
                        Color : newColor,

                }
                debugger;
                    $.ajax({
                        type: "POST",
                        url: "/Schedule/AddShiftType",
                        data: NewShiftData,
                        success: function(data) {
                            onNeedReload();
                            document.getElementById("addShiftTypeModal").style.display = "none";
                        },
                        error: function(error) {
                        console.log(error);
                        }
                    });

                    debugger;
        }



        onClickUpdate = function(){
            debugger;
                var inputtedShiftType = $('#updatedShiftType').val()
                var newStartTime = $('#updatedStartTime').val()
                var newEndTime = $('#updatedEndTime').val()
                var newColor =  $('#updatedColor').val()
                debugger;
                var UpdatedShiftData = {
                    ShiftTypeId : selectedStRowId,
                    InputtedShiftType : inputtedShiftType,
                    StartTime : newStartTime,
                    EndTime : newEndTime,
                    Color : newColor,

                }
                document.getElementById("updateShiftTypeModal").style.display = "none";

                Swal.fire({
                    title: 'Are you sure about that?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, update it!'
                }).then((result) => {
                    if (result.isConfirmed){
                        $.ajax({
                        type: "POST",
                        url: "/Schedule/UpdateShiftType",
                        data: UpdatedShiftData,
                        success: function(data) {
                            Swal.fire(
                                    'Updated!',
                                    'Your choose has been deleted.',
                                    'success'
                            )
                            onNeedReload();

                        },
                            error: function(error) {
                                Swal.fire(
                                    'Error!',
                                    'Deleting failed.',
                                    'error'
                                )
                            }
                        });
                    }
                });
        }

    });
</script>
</html>