@model PersonnelManagement.Mvc.Areas.Admin.Models.UserModel
@{
}
<!--||||||||||||||||||||||||||||||||||||||||||JQGRID VE JQUERY KAYNAKLARI||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/css/ui.jqgrid.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.structure.min.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.css" rel="stylesheet" />
    <link href="~/js/jquery-ui-1.12.1.custom/jquery-ui.theme.min.css" rel="stylesheet" />
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script src="~/js/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>*@
    <script>var $ = jQuery.noConflict(false);</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.5/jquery.jqgrid.min.js"></script>
   @* <link rel="stylesheet" href=@sweetAlertTheme />*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.all.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<meta charset="UTF-8">
<div class="container" style="border:none; margin-top:50px;">
﻿<div class="custom-model-inner">
    <div class="close-btn" onclick="closeModal()">×</div>
    <div class="custom-model-wrap">
        <div class="pop-up-content-wrap">

            <!-- ======= Operations Section ======= -->
            <section id="portfolio-details" class="portfolio-details">
                <div class="container">

                    <form id ="userForm" method="post" onsubmit="return false" asp-area="Admin" asp-controller="User" asp-action="AddOrUpdateUsers" enctype="multipart/form-data">

                            <div class="profile-pic">
                                <label class="-label" for="file">
                                    @*@using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
                                    @*{*@
                                        <div>
                                                <i class="fas fa-camera"></i>
                                            <label for="file">Değiştir</label>
                                            @Html.TextBoxFor(u => u.Picture, new { type = "file", id = "file", @onchange = "loadFile(this)" })
                                            <input type="submit" value="Yükle" />
                                        </div>
                                    @*}*@
                                </label>
                               
                                <img src="@Url.Content(Model.PictureUrl)" id="output" width="200" />

                            </div>

                            
                            @Html.HiddenFor(u => u.Id)
                            @Html.HiddenFor(u => u.PictureName)
                            <div style="display: flex; gap: 10px; width:100%; margin-top:5px;">
                                @Html.TextBoxFor(u => u.Name, new { @class = "textBox", @placeholder = "İsim Giriniz.", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\sçÇğĞıİöÖşŞüÜ]/g, '')" })
                                @Html.TextBoxFor(u => u.Surname, new { @class = "textBox", @placeholder = "Soyisim Giriniz.", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\sçÇğĞıİöÖşŞüÜ]/g, '')" })
                            </div>
                            <div style="margin-top:5px;">
                            @Html.TextBoxFor(u => u.UserName, new { @class = "textBox", @placeholder = "Kullanıcı Adı Giriniz.", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\s0-9_\\-\\.@çÇğĞıİöÖşŞüÜ]/g, '')" })
                            </div>
                            <div style="margin-top:5px;">
                            @Html.TextBoxFor(u => u.Email, new { @class = "textBox",type = "email", @placeholder = "örnek@mail.com", @length = "20",@oninput = "this.value = this.value.replace(/[^a-zA-Z\\s0-9_\\-\\.@çÇğĞıİöÖşŞüÜ]/g, '')" })
                            </div>
                            <div style="display: flex; gap: 10px; width:100%;margin-top:5px;">
                                <div style="display: flex; gap: 10px; width:15%;">
                                    @Html.DropDownListFor(u => u.Dial_Code, new SelectList(Model.CountryCodes, "Dial_Code", "Dial_Code", Model.Dial_Code), "Ülke Kodu", new { @id = "phoneList", @class = "textBox",@style = "width: 10%;", @placeholder = "Ülke Kodu" })
                                </div>
                                @Html.TextBoxFor(u => u.PhoneNumber, new { @class= "textBox", @placeholder = "000 000 0000", @oninput = "this.value = this.value.replace(/[^0-9]/g, '')", @minlength = "10", @maxlength = "10", })
                                @Html.DropDownListFor(u => u.RoleId, new SelectList(Model.Roles, "Id", "Name", Model.RoleId), "Kullanıcı Rolü Seçin", new { @id = "deplist", @onchange = "onDepartmentChange(this)", @class = "textBox", @placeholder = "Kullanıcı Rolü Seçin" })    
                            </div>
                            <div style="display: flex; gap: 10px; width:100%;margin-top:5px;">
                                @Html.TextBoxFor(u => u.Password, new { @class = "textBox", @placeholder = "şifre", @length = "20"})
                                @Html.TextBoxFor(u => u.ConfirmPassword, new { @class = "textBox", @placeholder = "şifre(tekrar)", @length = "20"})
                            </div>

                             
                                @Html.HiddenFor(u => u.EmployeeId, new {id = "employeeId"})
                            @Html.ValidationMessageFor(u => u.PhoneNumber)
                            @Html.ValidationMessageFor(u=>u.Name)
                            <div class="searchBoxContainer" style="margin-top:5px;">
                                <div style="display: flex; gap: 10px; width:100%;">
                                      <input type="text" id="mySearchBoxN" placeholder="Çalışan Arama..." class="searchBar">
                                      <input type="text" id="mySearchBoxD" placeholder="Departman Arama..." class="searchBar">
                                      <input type="text" id="mySearchBoxP" placeholder="Pozisyon Arama..." class="searchBar">
                                </div>
                            </div>
                            <table id="jqGrid3" ></table>
                            <div id="jqGridPager3" style="width:100%; height:auto; margin: auto;"></div>
                            @*<r style="color:aqua"/>
                            <div1 class="container">
                                <div style="display: flex; gap: 10px;" class="other_content">
                                        <input type="text" class="textBox" id="emp" placeholder="Çalışan Adı" disabled/>
                                        <input type="text" class="textBox" id="dep" placeholder="Departmanı"disabled/>
                                        <input type="text" class="textBox" id="pos" placeholder="Pozisyonu"disabled/>
                                </div>
                            </div1>*@
                    <br />
                    <button id ="saveBtn" class="button" style="margin-top:10px; width:60%;" type= "submit" onclick="saveUser()">Save</button>
                    </form>

                </div>
            </section><!-- End Operations Section -->
        </div>
    </div>  
</div>  </div>
@*<div class="bg-overlay"></div>*@

<link href="~/css/popUp.css" rel="stylesheet">

<script>
    var grid3 = $("#jqGrid3");
    function saveUser() {
        debugger;
    var form = document.getElementById("userForm");
    var formData = new FormData(form);
    var opType = "@TempData["OperationType"]";
    var itemName = "@Model.Name";
    

    //
    Swal.fire({
        title: 'Emin misiniz?',
        text: itemName + ' adlı kullanıcıyı' + opType + 'işlemi yapmak istediğinizden emin misiniz?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Kabul Et',
        cancelButtonText: 'Vazgeç'
    }).then((result) => {
        if (result.isConfirmed){
            $.ajax({
                type: "POST",
                url: "/Admin/User/SaveUser",
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                success: function(data) {
                    Swal.fire(
                        opType + 'İşlemi Başarılı!',
                        data.message,
                        'success'
                    )
                    onNeedReload();
                },
                error: function(error) {
                    Swal.fire(
                        'Hata!',
                        error.message,
                        'error'
                    )
                }
            });
        }

    });
    document.getElementById("partialZone").style.display = "none";
}
    function closeModal(){
        document.getElementById("partialZone").style.display = "none";
    }

    var loadFile = function (input) {
      debugger;
      var image = document.getElementById("output");
        if (input.files && input.files[0]) {
            image.src = URL.createObjectURL(input.files[0]);
        }
    };

    $(document).ready(function () {


        grid3.jqGrid({
                url: '/Employee/GetEmployees',
                mtype: "POST",
                datatype: "json",
                colnames: ["EmployeeId","EmployeeName", "DepartmentName", "PositionName"],
                colModel: [
                    { label: 'Id', name: 'Id', key:true,  width: "36px", search:false,hidden:true },
                    { label: 'Name', name: 'Name', width: "225px", sorttype: function(cell, obj) {return turkishToLower(cell);}},
                    { label: 'Department', name: 'DepartmentName', width: "225px", sorttype: function(cell, obj) {return turkishToLower(cell);} },
                    { label: 'Position', name: 'PositionName', width: "225px", sorttype: function(cell, obj) {return turkishToLower(cell);} },
                    {
                        name: 'Settings',
                        index: 'Settings',
                        width: "125px",
                        align: 'center',
                        sortable: false,
                        formatter: function(cellvalue, options, rowObject) {
                            return '<button class="Sel_btn">Select</button>&nbsp;&nbsp;&nbsp;';
                        }
                    }

                ],
                width: '640',
                loadonce: true,
                navOptions:{reloadGridOptions:{fromServer:true}},
                multiSort: true,
                multiSelect: true,
                viewrecords: true,
                search: true,
                rowNum: 10,
                pager: "#jqGridPager3",

        });

        $("#mySearchBoxN").keyup(function () {
            var rules = [],
                postData = grid3.jqGrid("getGridParam", "postData"),
                colModel = grid3.jqGrid("getGridParam", "colModel"),
                searchText = $("#mySearchBoxN").val(),
                l = colModel.length;

            for (var i = 0; i < l; i++) {
                var cm = colModel[i];
                if (cm.name === "Name" && cm.search !== false && (typeof cm.stype === "undefined" || cm.stype === "text")) {
                    rules.push({
                        field: cm.name,
                        op: "cn",
                        data: searchText
                    });
                    break;
                }
            }

            $.extend(postData, {
                filters: {
                    groupOp: "OR",
                    rules: rules
                }
            });

            grid3.jqGrid("setGridParam", { search: true, postData: postData });
            grid3.trigger("reloadGrid", [{ page: 1, current: true }]);
            return false;
        });

        $("#mySearchBoxP").keyup(function () {
            var rules = [],
                postData = grid3.jqGrid("getGridParam", "postData"),
                colModel = grid3.jqGrid("getGridParam", "colModel"),
                searchText = $("#mySearchBoxP").val(),
                l = colModel.length;

            for (var i = 0; i < l; i++) {
                var cm = colModel[i];
                if (cm.name === "PositionName" && cm.search !== false && (typeof cm.stype === "undefined" || cm.stype === "text")) {
                    rules.push({
                        field: cm.name,
                        op: "cn",
                        data: searchText
                    });
                    break;
                }
            }

            $.extend(postData, {
                filters: {
                    groupOp: "OR",
                    rules: rules
                }
            });

            grid3.jqGrid("setGridParam", { search: true, postData: postData });
            grid3.trigger("reloadGrid", [{ page: 1, current: true }]);
            return false;
        });

        $("#mySearchBoxD").keyup(function () {
            var rules = [],
                postData = grid3.jqGrid("getGridParam", "postData"),
                colModel = grid3.jqGrid("getGridParam", "colModel"),
                searchText = $("#mySearchBoxD").val(),
                l = colModel.length;

            for (var i = 0; i < l; i++) {
                var cm = colModel[i];
                if (cm.name === "DepartmentName" && cm.search !== false && (typeof cm.stype === "undefined" || cm.stype === "text")) {
                    rules.push({
                        field: cm.name,
                        op: "cn",
                        data: searchText
                    });
                    break;
                }
            }

            $.extend(postData, {
                filters: {
                    groupOp: "OR",
                    rules: rules
                }
            });

            grid3.jqGrid("setGridParam", { search: true, postData: postData });
            grid3.trigger("reloadGrid", [{ page: 1, current: true }]);
            return false;
        });



       $(document).on('click', '.Sel_btn', function () {

            var row = $(this).closest('tr.jqgrow');
            var rowId = row.attr('id');
            $("#employeeId").val(rowId)
            //debugger;
            //var emp = row.find('td:eq(1)').text();
            //var dep = row.find('td:eq(2)').text();
            //var pos = row.find('td:eq(3)').text();
            //$("#employeeId").val(rowId);
            //$("#emp").val(emp);
            //$("#dep").val(dep);
            //$("#pos").val(pos);

       });



        function turkishToLower(str) {
            return str.replace(/Ğ/g, 'g').replace(/Ü/g, 'u').replace(/Ş/g, 's').replace(/İ/g, 'i').replace(/I/g, 'i').toLocaleLowerCase('tr');
        }

    //    var employeeId = /*"@Model.EmployeeId";*/ 5;
    //debugger;
    //if(employeeId != null){
        
    //    //debugger;
    //    //    $.ajax({
    //    //                type: "POST",
    //    //                url: "/Employee/GetById/"+ employeeId,
    //    //                success: function(data) {
    //    //                   $("#mySearchBoxN").val(data.name),
    //    //                   $("#mySearchBoxD").val(data.departmentName),
    //    //                   $("#mySearchBoxP").val(data.positionName)
    //    //                },
    //    //                error: function(error) {
    //    //                    Swal.fire(
    //    //                        'Error!',
    //    //                        'Deleting failed.',
    //    //                        'error'
    //    //                    )
    //    //                }
    //    //    })
    //}
        
});
</script>

<style>
.modal {
  display: block;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  padding-left: 50px;
  left: 0;
  top: 0;
  height: 100%;
  overflow: auto; 
  background-color: rgb(0,0,0); 
  background-color: rgba(0,0,0,0.4);
}
    .profile-pic {
        color: transparent;
        transition: all .3s ease;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        transition: all .3s ease;
    }

    .profile-pic input {
        display: none;
    }

    .profile-pic img {
        position: absolute;
        object-fit: cover;
        width: 165px;
        height: 165px;
        box-shadow: 0 0 10px 0 rgba(255, 255, 255, .35);
        border-radius: 100px;
        z-index: 0;
    }

    .profile-pic .-label {
        cursor: pointer;
        height: 165px;
        width: 165px;
    }

    .profile-pic:hover .-label {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, .8);
        z-index: 10000;
        color: rgb(250, 250, 250);
        transition: background-color .2s ease-in-out;
        border-radius: 100px;
        margin-bottom: 0;
    }

    .profile-pic span {
        display: inline-flex;
        padding: .2em;
        height: 2em;
    }
</style>